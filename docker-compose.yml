version: '3'

services:

  # Apigateway
  nginx:
    image: nginx:latest
    ports:
      - "5050:5050"
    volumes:
        - ./api-gateway/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro  # Actualiza la ruta al archivo nginx.conf
    depends_on:
      - video-mgmt
    networks:
      - network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - network


  postgres-queries:
    build: ./postgres-queries
    container_name: postgres_queries
    depends_on:
      - postgres
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
    ports:
      - "8000:8000"
    networks:
      - network

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    networks:
      - network
  worker:
    build:
      context: ./video-mgmt
    command: celery -A tasks worker --loglevel=info
    volumes:
      - ./video-mgmt:/app
    depends_on:
      - redis
      - postgres
    networks:
      - network


  autenticador:
    build:
      context: ./autenticador
    command: python app.py
    ports:
      - "5002:5002"
    volumes:
      - ./autenticador:/app
    depends_on:
      - video-mgmt
      - postgres
    networks:
      - network

  almacenar:
    build:
      context: ./almacenar
    command: python app.py
    ports:
      - "5001:5001"
    volumes:
      - ./almacenar:/app
    depends_on:
      - video-mgmt
    networks:
      - network

  video-mgmt:
    build:
      context: ./video-mgmt
    command: python app.py
    ports:
      - "5004:5004"
    volumes:
      - ./video-mgmt:/app
    depends_on:
      - redis
      - postgres
    networks:
      - network

networks:
  network:
    driver: bridge
